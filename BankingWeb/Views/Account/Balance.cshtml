@using BankingWeb.Models
@model List<AccountModel>
@{
    ViewBag.Title = "Balance";
}
@functions
{
    static string GetAccountClass(AccountModel account)
    {
        var cssClass = "";

        switch (account.State)
        {
            case State.Blocked:
                cssClass = "error";
                break;
            case State.Low:
                cssClass = "warning";
                break;
            case State.Ok:
                cssClass = "success";
                break;
        }

        return cssClass;
    }

}
<h1>
    Balance
</h1>
<table class="table table-striped">
    <tr>
        <th>
            №
        </th>
        <th>
            Account number
        </th>
        <th>
            Balance
        </th>
        <th>
            Expiration date
        </th>
        <th>
            State
        </th>
    </tr>
    @for (var i = 0; i < Model.Count; ++i)
    {
        <tr class="@GetAccountClass(Model[i])">
            <td>
                @(i + 1)
            </td>
            <td>
                @Model[i].Number
            </td>
            <td>
                @foreach (var money in Model[i].Balance.Where(m => m.Value != 0))
                {
                    @(money.Value.GetValueOrDefault() + " " + money.Symbol)
                    if (Model[i].Balance.Last(m => m.Value != 0) != money)
                    {
                        @(" / ")
                    }
                }
            </td>
            <td>
                @Model[i].ExpirationDate
            </td>
            <td>
                @Model[i].State
            </td>
        </tr>
    }
</table>
