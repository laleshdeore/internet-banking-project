@using BankingWeb.Models
@model List<BankingWeb.Models.AccountModel>
@functions
{
    string GetAccountClass(AccountModel account)
    {
        var cssClass = "";

        switch (account.State)
        {
            case State.Blocked:
                cssClass = "error";
                break;
            case State.Low:
                cssClass = "warning";
                break;
            case State.Ok:
                cssClass = "success";
                break;
        }

        return cssClass;
    }
}
@{
    ViewBag.Title = "Balance";
}

<h1>
    Balance header</h1>
<table class="table table-striped">
    <tr>
        <th>
            №
        </th>
        <th>
            Account number
        </th>
        <th>
            Balance
        </th>
        <th>
            State
        </th>
    </tr>
    @for (var i = 0; i < Model.Count; ++i)
    {
        <tr class="@GetAccountClass(Model[i])">
            <td>
                @(i + 1)
            </td>
            <td>
                @Model[i].Number
            </td>
            <td>
                @foreach (var money in Model[i].Balance)
                {
                    @(money.Value.GetValueOrDefault() + " " + money.Symbol)
                    if (Model[i].Balance.Last() != money)
                    {
                    @(" / ")
                    }
                }
            </td>
            <td>
                Ok
            </td>
        </tr>
    }
</table>